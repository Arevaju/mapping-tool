install.packages("googleVis")
library("googleVis", lib.loc="C:/Users/torreju/Documents/R/win-library/2.12")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("devtools")
library("devtools", lib.loc="C:/Users/torreju/Documents/R/win-library/2.12")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
options(repos = c(CRAN = "http://cran.rstudio.com"))
install.packages('shiny')
runGitHub('shiny-app', 'Arevaju')
library("devtools", lib.loc="C:/Users/torreju/Documents/R/win-library/3.1")
library("devtools", lib.loc="C:/Users/torreju/Documents/R/win-library/3.1")
runGitHub('shiny-app', 'Arevaju')
library("shiny", lib.loc="C:/Users/torreju/Documents/R/win-library/3.1")
runGitHub('shiny-app', 'Arevaju')
library("devtools", lib.loc="C:/Users/torreju/Documents/R/win-library/3.1")
library("shiny", lib.loc="C:/Users/torreju/Documents/R/win-library/3.1")
runGitHub('shiny-app', 'Arevaju')
getwd()
p4 <- nPlot(~ cyl, data = mtcars, type = 'pieChart')
p4
library("rMaps", lib.loc="~/R/win-library/3.1")
library("rCharts", lib.loc="~/R/win-library/3.1")
p4 <- nPlot(~ cyl, data = mtcars, type = 'pieChart')
p4
p4
p4
dat <- data.frame(
t = rep(0:23, each = 4),
var = rep(LETTERS[1:4], 4),
val = round(runif(4*24,0,50))
)
p8 <- nPlot(val ~ t, group =  'var', data = dat,
type = 'stackedAreaChart', id = 'chart'
)
p8
remove.packages("rMaps", lib="~/R/win-library/3.1")
dat <- data.frame(
t = rep(0:23, each = 4),
var = rep(LETTERS[1:4], 4),
val = round(runif(4*24,0,50))
)
p8 <- nPlot(val ~ t, group =  'var', data = dat,
type = 'stackedAreaChart', id = 'chart'
)
p8
a <- hPlot(x = "Category", y = "Value", data = data, type = "pieChart")
dat <- data.frame(
t = rep(0:23, each = 4),
var = rep(LETTERS[1:4], 4),
val = round(runif(4*24,0,50))
)
p8 <- nPlot(val ~ t, group =  'var', data = dat,
type = 'stackedAreaChart', id = 'chart'
)
p8
install.packages("manipulate")
gdp <-  read.table ("E:\Juan\Indicators\LF_113_NUTS2.csv", sep = ",")
gdp <-  read.table ("E:/Juan/Indicatores/gdp/LF_113_NUTS2.csv", sep = ",")
gdp <-  read.table ("E:/Juan/Indicatores/gdp/LF_113_NUTS2.csv", sep = ",")
gdp <-  read.table ("E:/Juan/Indicators/gdp/LF_113_NUTS2.csv", sep = ",")
View(gdp)
meltfunction <- function(x){
dat <- read.table(x,sep = ",", header=T)
melt(dat, variable.name = "Year")
}
##Calling the melting function and arrange data together in one data frame
out<- as.data.frame(lapply(gdp,meltfunction))
View(gdp)
gdp <-  read.table ("E:/Juan/Indicators/gdp/LF_113_NUTS2.csv", sep = ",", header = T)
View(gdp)
names(gdp)
gdp <- subset(last, select = -c(X2030,X2040) )
gdp <- subset(gdp, select = -c(X2030,X2040) )
View(gdp)
meltfunction <- function(x){
dat <- read.table(x,sep = ",", header=T)
melt(, variable.name = "X2010")
}
out<- as.data.frame(lapply(gdp,meltfunction))
View(gdp)
gdp1 <- cast(gdp, X2010, sum, value = 'Value',na.rm=TRUE)
library(reshape)
gdp1 <- cast(gdp, X2010, sum, value = 'Value',na.rm=TRUE)
gdp1 <- cast(gdp, 'X2010', sum, value = 'Value',na.rm=TRUE)
gdp1 <- melt(gdp, value.name = 'X2030')
View(gdp1)
names(gdp)
gdp <-  read.table ("E:/Juan/Indicators/gdp/LF_113_NUTS2.csv", sep = ",", header = T)
gdp <- subset(gdp, select = -c(X2030,X2040) )
colnames(gdp)[2]<-"2010"
colnames(gdp)[3]<-"2020"
colnames(gdp)[4]<-"2050"
View(gdp)
gdp1 <- melt(gdp, value.name = '2010')
View(gdp1)
View(gdp1)
View(gdp1)
write.csv2(gdp1, file = "E:/Juan/Indicators/gdp/gdp2.csv", quote = FALSE, row.names= FALSE)
write.csv(gdp1, file = "E:/Juan/Indicators/gdp/gdp2.csv", quote = FALSE, row.names= FALSE)
names(gdp1)
gdp1 <- sort (NUTS_2)
gdp1 <- sort (gdp1$NUTS_2)
gdp1 <- melt(gdp, value.name = '2010')
gdp1 <- gdp[order(gdp$NUTS_2),]
View(gdp1)
gdp1 <- melt(gdp, value.name = '2010')
gdp1 <- gdp1[order(gdp1$NUTS_2),]
View(gdp1)
gdp1 <- melt(gdp, value.name = '2010')
View(gdp1)
install.packages(c("boot", "class", "cluster", "codetools", "foreign", "KernSmooth", "lattice", "manipulate", "MASS", "Matrix", "nlme", "nnet", "rpart", "spatial", "survival"))
install.packages("svgPanZoom")
install.packages("SVGAnnotation")
library(shiny)
library(SVGAnnotation)
library(svgPanZoom)
library(ggplot2)
ui <- shinyUI(bootstrapPage(
svgPanZoomOutput(outputId = "main_plot")
))
server = shinyServer(function(input, output) {
output$main_plot <- renderSvgPanZoom({
p <- ggplot() +
geom_point(
data=data.frame(faithful),aes(x=eruptions,y=waiting)
) +
stat_density2d(
data=data.frame(faithful)
,aes(x=eruptions,y=waiting ,alpha =..level..)
,geom="polygon") +
scale_alpha_continuous(range=c(0.05,0.2))
svgPanZoom(p, controlIconsEnabled = T)
})
})
runApp(list(ui=ui,server=server))
install.packages("shiny")
install.packages("ggplot2")
library(shiny)
library(SVGAnnotation)
library(svgPanZoom)
library(ggplot2)
ui <- shinyUI(bootstrapPage(
svgPanZoomOutput(outputId = "main_plot")
))
server = shinyServer(function(input, output) {
output$main_plot <- renderSvgPanZoom({
p <- ggplot() +
geom_point(
data=data.frame(faithful),aes(x=eruptions,y=waiting)
) +
stat_density2d(
data=data.frame(faithful)
,aes(x=eruptions,y=waiting ,alpha =..level..)
,geom="polygon") +
scale_alpha_continuous(range=c(0.05,0.2))
svgPanZoom(p, controlIconsEnabled = T)
})
})
runApp(list(ui=ui,server=server))
install.packages("devtools")
install_github('duncantl/SVGAnnotation')
library("devtools", lib.loc="~/R/R-3.2.1/library")
install_github('duncantl/SVGAnnotation')
install.packages("gridSVG")
library("gridSVG", lib.loc="~/R/R-3.2.1/library")
library(shiny)
library(SVGAnnotation)
#library(svgPanZoom)
library(ggplot2)
ui <- shinyUI(bootstrapPage(
svgPanZoomOutput(outputId = "main_plot")
))
server = shinyServer(function(input, output) {
output$main_plot <- renderSvgPanZoom({
p <- ggplot() +
geom_point(
data=data.frame(faithful),aes(x=eruptions,y=waiting)
) +
stat_density2d(
data=data.frame(faithful)
,aes(x=eruptions,y=waiting ,alpha =..level..)
,geom="polygon") +
scale_alpha_continuous(range=c(0.05,0.2))
svgPanZoom(p, controlIconsEnabled = T)
})
})
runApp(list(ui=ui,server=server))
getwd()
setwd('E:/Juan/)
setwd('E:/Juan/')
setwd('E:/mapping_tool/')
runApp()
install.packages("E:/Juan/shiny/luisa", repos = NULL, type = "source")
install.packages("E:/Juan/shiny/luisa/luisa", repos = NULL, type = "source")
write.csv2(gdp1, file = "E:/Juan/Indicators/gdp/gdp2.csv", quote = FALSE, row.names= FALSE, dependencies = TRUE)
install.packages("E:/Juan/shiny/luisa", repos = NULL, type = "source", dependencies=TRUE)
install.packages("E:/Juan/shiny/luisa/luisa", repos = NULL, type = "source", dependencies=TRUE)
install.packages("E:/Juan/shiny/luisa/luisa", repos = NULL, type = "source")
install.packages("E:/Juan/shiny/luisa/", repos = NULL, type = "source")
install.packages("E:/Juan/shiny/luisa/luisa", repos = NULL, type = "source")
install.packages("E:/Juan/shiny/luisa/luisa", repos = NULL, type = "source")
install.packages("E:/Juan/shiny/luisa/luisa", repos = NULL, type = "source",  dependencies=TRUE)
install.packages("E:/Juan/shiny/luisa/luisa", repos = NULL, type = "source",  dependencies=TRUE)
install.packages("E:/Juan/shiny/luisa/", repos = NULL, type = "source",  dependencies=TRUE)
install.packages("E:/Juan/shiny/luisa/luisa", repos = NULL, type = "source",  dependencies=TRUE)
install.packages("E:/Juan/shiny/luisa/luisa", repos = NULL, type = "source",  dependencies=TRUE)
install.packages("E:/Juan/shiny/luisa/luisa", repos = NULL, type = "source")
install.packages("E:/Juan/shiny/luisa/luisa", repos = NULL, type = "source")
install.packages("tmap")
install.packages("E:/Juan/shiny/luisa/luisa", repos = NULL, type = "source")
install.packages("googleVis")
install.packages("E:/Juan/shiny/luisa/luisa", repos = NULL, type = "source")
install_github('rCharts', 'ramnathv')
install_github('ramnathv/rCharts ')
install_github('ramnathv/rCharts')
install.packages("E:/Juan/shiny/luisa/luisa", repos = NULL, type = "source")
library("luisa", lib.loc="~/R/R-3.2.1/library")
luisa::runExample()
setwd('E:/mapping_tool/')
runApp()
ui <- shinyUI(bootstrapPage(
svgPanZoomOutput(outputId = "main_plot")
))
server = shinyServer(function(input, output) {
output$main_plot <- renderSvgPanZoom({
p <- ggplot() + geom_point(data=data.frame(faithful),aes(x=eruptions,y=waiting)) + stat_density2d(data=data.frame(faithful),aes(x=eruptions,y=waiting, alpha =..level..),geom="polygon") + scale_alpha_continuous(range=c(0.05,0.2))
svgPanZoom(p, controlIconsEnabled = T)
})
})
runApp(list(ui=ui,server=server))
runApp()
runApp()
runApp()
runApp()
runApp()
library(svgPanZoom)
library(SVGAnnotation)
library(ggplot2)
svgPanZoom(
svgPlot(
#will put on separate line but also need show
show(
ggplot(data.frame(x=1:10,y=1:10),aes(x=x,y=y)) + geom_line()
)
# this is critical with svgPlot and grid graphics
, addInfo = F
)
)
svgPanZoom(
ggplot(data.frame(x=1:10,y=1:10),aes(x=x,y=y)) + geom_line()
)
library(svgPanZoom)
library(SVGAnnotation)
library(lattice)
# with gridSVG
svgPanZoom(
xyplot( y~x, data.frame(x=1:10,y=1:10), type = "b" )
)
# with svgPlot
svgPanZoom(
svgPlot(
show(xyplot( y~x, data.frame(x=1:10,y=1:10), type = "b" ))
, height = 6
, width = 10
)
)
svgPanZoom(
xyplot( y~x, data.frame(x=1:10,y=1:10), type = "b" )
)
# with svgPlot
svgPanZoom(
svgPlot(
show(xyplot( y~x, data.frame(x=1:10,y=1:10), type = "b" ))
, height = 6
, width = 10
)
)
library("svgPanZoom", lib.loc="~/R/R-3.2.1/library")
# with gridSVG
svgPanZoom(
xyplot( y~x, data.frame(x=1:10,y=1:10), type = "b" )
)
# with svgPlot
svgPanZoom(
svgPlot(
show(xyplot( y~x, data.frame(x=1:10,y=1:10), type = "b" ))
, height = 6
, width = 10
)
)
library("gridSVG", lib.loc="~/R/R-3.2.1/library")
svgPanZoom(
xyplot( y~x, data.frame(x=1:10,y=1:10), type = "b" )
)
# with svgPlot
svgPanZoom(
svgPlot(
show(xyplot( y~x, data.frame(x=1:10,y=1:10), type = "b" ))
, height = 6
, width = 10
)
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("roxygen2")
library("roxygen2", lib.loc="~/R/R-3.2.1/library")
document(pkg = "luisa", clean = NULL, roclets = NULL, reload = TRUE)
document(pkg = "E:/Juan/shiny/luisa/luisa", clean = NULL, roclets = NULL, reload = TRUE)
install.packages("E:/Juan/shiny/luisa/luisa", repos = NULL, type = "source")
library("googleVis", lib.loc="~/R/R-3.2.1/library")
detach("package:googleVis", unload=TRUE)
remove.packages("googleVis", lib="~/R/R-3.2.1/library")
